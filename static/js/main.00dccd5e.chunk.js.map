{"version":3,"sources":["assets/arrowleft.svg","assets/arrowright.svg","assets/isymbol.svg","assets/logout.svg","assets/magnifying.svg","Components/toast.tsx","Pages/Login/Login.tsx","redux/actions/authActions.ts","Pages/ConfirmModal/ConfirmModal.tsx","redux/actions/selectionActions.ts","Components/navbar.tsx","Pages/QRScan/QRScan.tsx","Pages/Selection/Selection.tsx","Pages/Search/Search.tsx","Pages/Routes.tsx","serviceWorker.ts","redux/reducers/authReducer.ts","redux/reducers/selectionReducer.ts","redux/reducers/index.ts","redux/store/index.ts","index.tsx","assets/hiss_full_logo.svg","assets sync /^/.//.*/.svg$","assets/hiss.svg"],"names":["module","exports","commonToastProperties","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","Login","props","emailHandler","event","setState","email","target","value","passwordHandler","password","bind","state","submitColor","redirectToSelection","this","login","then","error","toast","success","onClose","to","style","pageContainer","formContainer","titleContainer","logoContainer","src","require","fontSize","type","placeholder","onChange","inputContainer","Button","onClick","submitContainer","backgroundColor","React","PureComponent","display","marginLeft","height","width","alignItems","marginTop","marginBottom","flexDirection","paddingLeft","paddingRight","outline","color","border","connect","isLoggedIn","auth","isLoading","userData","dispatch","axios","post","headers","response","catch","loginFailed","actions","ConfirmModal","getRegisteredStatus","a","async","registeredStatus","foodRestrictions","applicationStatus","modalVisible","checkInStatusUrl","get","authorization","data","token","dismiss","checked_in","warn","status","attribute","toLowerCase","restrictions","exception","registerFood","qrData","registerWorkshop","checkInUser","participantRegistered","checkInEvent","disableSubmit","disable","eventName","buttonTitle","modalContainer","visible","closeModal","animation","customStyles","justifyContent","badgeContainer","Badge","marginRight","padding","fontWeight","first_name","last_name","emailRow","margin","checkInStatusRow","borderColor","block","confirmButton","disabled","borderWidth","borderStyle","paddingTop","paddingBottom","borderBottom","selection","updateSelection","selectionSuccess","TopNavbar","redirect","redirectRoute","logout","onLeftPress","leftRedirect","onRightPress","rightRedirect","leftIconSrc","rightIconSrc","leftIcon","leftRedirectRoute","rightRedirectRoute","alt","className","undefined","rightIcon","Navbar","navSpacing","Brand","href","QRScan","handleScan","confirmVisible","qrObj","JSON","parse","Object","prototype","hasOwnProperty","call","switchCamera","frontCamera","show","hide","eventSelectChange","option","val","attributeSelectChange","determineAttributes","foodChoices","label","options","delay","redirectToLogin","cameraString","eventOptions","attributeOptions","formatGroupLabel","groupStyles","groupBadgeStyles","length","selectionContainer","halfContainer","isClearable","isSearchable","styles","menu","provided","zIndex","defaultValue","filter","v","isDisabled","alignSelf","onScan","facingMode","switchCameraContainer","borderRadius","lineHeight","minWidth","textAlign","Selection","handleScanSubmit","redirectToScan","showModal","setParticipantData","user","participantData","nameHandler","name","handleSearchSubmit","responseData","results","users","displayUsers","console","log","InputGroup","FormControl","size","map","index","borderTop","key","float","viewBox","d","fill","Routes","basename","path","component","Search","Component","Boolean","window","location","hostname","match","INITIAL_STATE","rootReducer","combineReducers","action","persistConfig","storage","reducers","persistReducer","middlewares","thunk","store","createStore","compose","applyMiddleware","persistor","persistStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve"],"mappings":"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","file":"static/js/main.00dccd5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrowleft.15dfedc6.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowright.9a8c6bff.svg\";","module.exports = __webpack_public_path__ + \"static/media/isymbol.3f17aa2f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.9a8c6bff.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifying.c6fbba9a.svg\";","var commonToastProperties: object = {\n    position: \"bottom-center\",\n    autoClose: 1500,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true\n}\n\nexport {\n    commonToastProperties\n}","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions/authActions';\nimport { LoginData } from '../../types/TypeObjects';\nimport { Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {commonToastProperties} from './../../Components/toast';\nimport { toast, ToastContainer } from 'react-toastify';\n\ninterface IProps {\n  isLoggedIn: boolean;\n  isLoading: boolean;\n  userData: LoginData;\n  error: string;\n  login: (email: string, password: string) => Promise<object>;\n  logout: () => void;\n}\n\ninterface IState {\n  email: string;\n  password: string;\n  submitColor: string;\n  redirectToSelection: boolean;\n}\n\nclass Login extends React.PureComponent<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.emailHandler = this.emailHandler.bind(this);\n    this.passwordHandler = this.passwordHandler.bind(this);\n    this.state = {\n      email: \"\", \n      password: \"\", \n      submitColor: '#FF7C93', \n      redirectToSelection: false \n    };\n  }\n\n  login() {\n    this.props.login(this.state.email, this.state.password).then(() => {\n      if(this.props.error) {\n        toast.error(\"Login Failed\", commonToastProperties);\n      } else {\n        toast.success(\"Login Successful\", {\n          ...commonToastProperties, \n          onClose: () => this.setState({ redirectToSelection: true })\n        });\n      }\n    });\n  }\n\n  emailHandler = (event) => {\n    this.setState({ email: event.target.value });\n  }\n\n  passwordHandler = (event) => {\n    this.setState({ password: event.target.value });\n  }\n\n  render() {\n    const { redirectToSelection } = this.state;\n    \n    if(redirectToSelection) {\n      return (\n        <Redirect to='/select'/>\n      )\n    }\n\n    return (\n      <div style={style.pageContainer}>\n        <form style={style.formContainer}>\n          <div style={style.titleContainer}>\n            <img\n              style={style.logoContainer}\n              src={require(\"../../assets/hiss_full_logo.svg\")}\n            />\n            <p style={{ fontSize: '18px' }}>by tamuhack</p>\n          </div>\n          <input\n            type='text'\n            placeholder='Email'\n            value={this.state.email}\n            onChange={this.emailHandler}\n            style={style.inputContainer}\n          />\n          <input\n            type='password'\n            placeholder='Password'\n            value={this.state.password}\n            onChange={this.passwordHandler}\n            style={style.inputContainer}\n          />\n\n          <Button\n            onClick={() => this.login()}\n            style={{...style.submitContainer, backgroundColor: this.state.submitColor}}\n          >\n            Login\n          </Button>\n\n          {/* Render Toast (This can go anywhere inside the render. It doesn't have to be at bottom) */}\n          {/* {failureToast}\n          {successToast}\n          {console.log(failureToast, successToast)} */}\n          <ToastContainer autoClose={1500} />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst style : { [key: string]: React.CSSProperties } = {\n  logoContainer : {\n    display: 'flex',\n    marginLeft: '-10px',\n    height: '56px'\n  },\n  pageContainer : {\n    display: 'flex',\n    height: '100vh',\n    width: '100vw',\n    alignItems: 'center',\n  },\n  titleContainer: {\n    marginTop: '27vh',\n    marginBottom: '40px',\n    width: '80vw'\n  },\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100vw',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    height: '100vh',\n  },\n  inputContainer: {\n    height: '57px',\n    width: '80vw',\n    paddingLeft: '4%',\n    marginBottom: '3vh',\n    fontSize: 17,\n    outline: 'none'\n  },\n  submitContainer: {\n    height: '57px',\n    width: '80vw',\n    marginTop: '3vh',\n    color: 'white',\n    fontSize: 20,\n    border: 0\n  },\n};\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.auth.isLoggedIn,\n  isLoading: state.auth.isLoading,\n  userData: state.auth.userData,\n  error: state.auth.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: (email:string, password:string) => dispatch(actions.login(email, password))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import axios from 'axios';\nimport { AppActions } from '../../types/actions';\nimport { Dispatch } from \"redux\";\n\nexport const isLoading = ( loading: boolean ): AppActions => ({\n  type: 'LOGIN_ATTEMPT',\n  isLoading: loading\n});\n\nexport const loginSuccess = ( userData: object ): AppActions => ({\n  type: 'LOGIN_SUCCESS',\n  userData\n});\n\nexport const loginFailed = ( error: object ): AppActions => ({\n  type: 'LOGIN_FAILED',\n  error\n});\n\nexport const logoutComplete = (): AppActions => ({\n  type: 'LOGOUT'\n});\n\nexport const logout = () => {\n  return (dispatch: Dispatch<AppActions>) => {\n    dispatch(logoutComplete());\n  }\n};\n\nexport const login = (email: string, password: string) => {\n  return (dispatch: Dispatch<AppActions>) => {\n    // dispatch(isLoading(true));\n\n    return axios.post(\n      'https://register.tamuhack.com/api/volunteer/login',\n      {\n         email: email,\n         password: password,\n      },\n      {\n         headers: {\n           'content-type': 'application/json',\n         }\n      }\n    ).then(response => {\n      dispatch(loginSuccess(response));\n    }).catch(error => {\n      dispatch(loginFailed(error));\n    });\n  };\n};\n","import React from 'react';\nimport { LoginData, QRData } from '../../types/TypeObjects';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport Rodal from 'rodal';\nimport 'rodal/lib/rodal.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {commonToastProperties} from './../../Components/toast';\nimport { toast, ToastContainer } from 'react-toastify';\n\ninterface IProps {\n  userData: LoginData;\n  event: string;\n  attribute: string;\n\n  qrData: QRData;\n  modalVisible: boolean;\n  closeModal: () => void;\n}\n\ninterface IState {\n  participantRegistered: boolean;\n  foodRestrictions: string;\n  applicationStatus: string;\n}\n\nclass ConfirmModal extends React.PureComponent<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {participantRegistered: false, foodRestrictions: \"None\", applicationStatus: \"\"};\n  }\n\n  getRegisteredStatus = async (email: string) : Promise<{registeredStatus, foodRestrictions, applicationStatus}> => {\n    let registeredStatus = false;\n    let foodRestrictions = \"None\";\n    let applicationStatus = \"\"\n\n    if (!this.props.modalVisible) {\n      return {registeredStatus, foodRestrictions, applicationStatus};\n    }\n\n    var checkInStatusUrl = \"https://register.tamuhack.com/api/volunteer/summary?email=\" + email;\n    await axios.get(\n      checkInStatusUrl,\n      {\n         headers: {\n           'content-type': 'application/json',\n           authorization: 'Token ' + this.props.userData.data.token\n         },\n      }\n    ).then(response => {\n      // Potential Bug: This route gets sent two times. \n      // This makes the toast kind of look ugly. Not critical though\n      toast.dismiss(); // Prevents a second toast from sending\n      if(!response.data.checked_in && this.props.event != \"checked_in\") {\n        // Set to top-center to make it look nicer. Optional\n        toast.warn(\"User is not checked in. Contact Director!\", {...commonToastProperties, autoClose: 4000});\n      }\n\n      if(\n        this.props.event == \"checked_in\" &&\n        !(response.data.status == \"I\" || response.data.status == \"C\")\n      ) {\n        toast.warn(\"User not authorized. Contact Director!\", {...commonToastProperties, autoClose: 5000});\n      }\n\n      if (\n        this.props.event != \"checked_in\" && \n        this.props.event != \"WorkshopEvent\" &&\n        this.props.attribute.toLowerCase() != response.data.restrictions.toLowerCase() \n        // !(this.props.attribute.toLowerCase() == 'none' && response.data.restrictions.toLowerCase() == 'other')\n      ) {\n        // Set to top-center to make it look nicer. Optional\n        // toast.warn(\"Food restrictions don't match. Notify Hacker!\", {...commonToastProperties, autoClose: 4000, position:\"top-center\"});\n      }\n      registeredStatus = response.data.checked_in;\n      foodRestrictions = response.data.restrictions;\n      applicationStatus = response.data.status;\n    }).catch(exception => {\n      toast.error(exception, {...commonToastProperties, autoClose: 3000});\n    });\n\n    return {registeredStatus, foodRestrictions, applicationStatus};\n  }\n\n  registerFood = async () => {\n    const checkInFood = \"https://register.tamuhack.com/api/volunteer/food\";\n\n    await axios.post(checkInFood, \n      {\n        \"email\": this.props.qrData.email,\n        \"meal\": this.props.event,\n        \"restrictions\": this.props.attribute\n      },\n      {\n      headers: {\n        authorization: \"Token \" + this.props.userData.data.token,\n        \"content-type\": \"application/json\"\n      }\n    }).then(response => {\n      toast.success(\"User scan successful.\", commonToastProperties);\n    }).catch(exception => {\n      toast.error(exception, {...commonToastProperties, autoClose: 3000});\n    });\n  };\n\n  registerWorkshop = async () => {\n    const checkInWorkshop = \"https://register.tamuhack.com/api/volunteer/workshops\";\n\n    await axios.post(checkInWorkshop, \n      {\n        \"email\": this.props.qrData.email,\n      },\n      {\n      headers: {\n        authorization: \"Token \" + this.props.userData.data.token,\n        \"content-type\": \"application/json\"\n      }\n    }).then(response => {\n      toast.success(\"User scan successful.\", commonToastProperties);\n    }).catch(exception => {\n      toast.error(exception, {...commonToastProperties, autoClose: 3000});\n    });\n  }\n\n  checkInUser = async () => {\n    const checkInUrl = \"https://register.tamuhack.com/api/volunteer/checkin\";\n\n    await axios.post(checkInUrl, \n      {\n        \"email\": this.props.qrData.email\n      },\n      {\n      headers: {\n        authorization: \"Token \" + this.props.userData.data.token,\n        \"content-type\": \"application/json\"\n      }\n    }).then(response => {\n      toast.success(\"User scan successful.\", commonToastProperties);\n      this.setState({ participantRegistered: true });\n    }).catch(exception => {\n      toast.error(exception, {...commonToastProperties, autoClose: 3000});\n      this.setState({participantRegistered: false});\n    });\n  };\n\n  checkInEvent = async () => {\n    const event = this.props.event;\n\n    if(event === \"checked_in\") {\n      await this.checkInUser();\n    } else if(event === \"WorkshopEvent\") {\n      await this.registerWorkshop();\n    } else {\n      await this.registerFood();\n    }\n  }\n\n  disableSubmit = () => {\n    if(this.props.event === \"checked_in\") {\n      return this.state.participantRegistered;\n    }\n\n    return !this.state.participantRegistered;\n  }\n\n  async componentDidUpdate() {\n    const {registeredStatus, foodRestrictions, applicationStatus} = await this.getRegisteredStatus(this.props.qrData.email);\n    this.setState({ participantRegistered: registeredStatus, foodRestrictions: foodRestrictions, applicationStatus });\n  }\n\n  render() {\n    const disable = this.disableSubmit();\n\n    var eventName = this.props.event;\n    var attribute = this.state.foodRestrictions;\n    var buttonTitle = \"Scan\";\n\n    if(this.props.event === 'checked_in') {\n      eventName = \"Check In\";\n      attribute = \"No Attribute\";\n      buttonTitle = \"Check In\";\n    } else if(this.props.event === 'WorkshopEvent') {\n      eventName = \"Workshop\";\n      attribute = \"No Attribute\";\n    }\n\n    var applicationStateText = {\n      \"P\": \"PENDING\",\n      \"R\": \"REJECTED\",\n      \"A\": \"ADMITTED\",\n      \"C\": \"NOT CHECKED IN\",\n      \"X\": \"DECLINED\",\n      \"I\": \"CHECKED IN\",\n      \"E\": \"EXPIRED\"\n    }\n\n    return (\n    <div style={style.modalContainer}>\n        <Rodal \n          visible={this.props.modalVisible} \n          onClose={this.props.closeModal}\n          animation=\"slideUp\"\n          width={'70vw'}\n          height={350}\n          customStyles={{ marginBottom: 0, justifyContent: 'flex-end', paddingLeft: 25, paddingRight: 25 }}\n        >\n          <div style={style.badgeContainer}>\n            <Badge style={{ marginRight: 15, padding: 10, backgroundColor: '#FFD9D9', fontSize: 15 }}>\n              {eventName}\n            </Badge>\n            <Badge style={{ padding: 10, backgroundColor: '#D9EFFF', fontSize: 15 }}>\n              {attribute}\n            </Badge>\n          </div>\n          <div>\n            <p style={{ display: 'flex', fontSize: 23, fontWeight: 'bold' }}>{this.props.qrData.first_name} {this.props.qrData.last_name}</p>\n          </div>\n          <div style={style.emailRow}>\n            <p style={{ fontSize: 16, fontWeight: 'bold', margin: 0, paddingLeft: 0}}>\n              Email\n            </p>\n            <p style={{ fontSize: 14, margin: 0 }}>\n              {this.props.qrData.email}\n            </p>\n          </div>\n          <div style={{...style.checkInStatusRow, borderColor: this.state.participantRegistered ? '#5CD059' : '#FFBFBF', fontSize: 20}}>\n            <p style={{ display: 'flex', margin: 0, padding: 0}}>\n              {applicationStateText[this.state.applicationStatus]}\n              {/* {this.state.participantRegistered ? 'CHECKED IN' : 'NOT CHECKED IN'} */}\n            </p>\n          </div>\n          <Button block\n            style={style.confirmButton}\n            disabled={disable}\n            onClick={this.checkInEvent}\n          >\n            {buttonTitle}\n          </Button>\n\n        </Rodal>\n        <ToastContainer autoClose={1500} />\n      </div>\n      );\n    }\n  }\n  \n    const style : { [key: string]: React.CSSProperties } = {\n        modalContainer: {\n            display: 'flex',\n            backgroundColor: 'white',\n            height: 350,\n            padding: 30,\n        },\n        checkInStatusRow: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderWidth: '5px',\n            borderStyle: 'solid',\n            marginBottom: 50,\n            paddingTop: 5,\n            paddingBottom: 5\n        },\n        emailRow: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            padding: 0,\n            paddingBottom: 10,\n            marginBottom: 20,\n            borderBottom: '1px #DEDEDE solid',\n        },\n        confirmButton: {\n            // display: 'flex', Firefox issues\n            justifyContent: 'center', \n            width: '100%', \n            height: '60px', \n            backgroundColor: '#FF7C93', \n            border: '0', \n            fontSize: '18px'\n        },\n        badgeContainer: {\n            display: 'flex', \n            flexDirection: 'row', \n            paddingBottom: 0, \n            marginBottom: 15\n        }\n    };\n\n    const mapStateToProps = state => ({\n        event: state.selection.event,\n        attribute: state.selection.attribute,\n        userData: state.auth.userData,\n    });\n\n    export default connect(mapStateToProps)(ConfirmModal);\n  \n","import { AppActions } from '../../types/actions';\nimport { Dispatch } from \"redux\";\n\nexport const selectionSuccess = ( event: string, attribute: string ): AppActions => ({\n  type: 'SELECTION_SUCCESS',\n  event,\n  attribute\n});\n\nexport const updateSelection = (event: string, attribute: string) => {\n  return (dispatch: Dispatch<AppActions>) => {\n    dispatch(selectionSuccess(event, attribute));\n  };\n};\n","import Navbar from 'react-bootstrap/Navbar'\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport * as actions from '../redux/actions/authActions';\nimport { connect } from 'react-redux';\n\n/*\n    Props leftIconSrc and rightIconSrc have to match the name exactly of the .svg file in @/src/assets\n*/\ninterface IProps {\n    leftIconSrc? : string;\n    rightIconSrc? : string;\n    leftRedirectRoute? : string;\n    rightRedirectRoute? : string;\n    logout: () => void;\n    /*\n        TODO: Have the sources to redirect when clicked\n    */\n}\n\ninterface IState {\n    leftRedirect: boolean;\n    rightRedirect: boolean;\n}\n\nclass TopNavbar extends React.PureComponent<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {leftRedirect: false, rightRedirect: false};\n  }\n\n  redirect = (redirectRoute: string) => {\n    if(redirectRoute === \"/\") {\n        this.props.logout();\n    }\n    return <Redirect to={redirectRoute} />\n  }\n\n  onLeftPress = () => {\n    this.setState({ leftRedirect: true });\n  }\n\n  onRightPress = () => {\n    this.setState({ rightRedirect: true });\n  }\n\n  render() {\n    var {\n        leftIconSrc,\n        rightIconSrc,\n        leftRedirectRoute,\n        rightRedirectRoute\n    } = this.props;\n\n    var leftIcon = leftIconSrc ? (\n        <img \n            alt=\"\"\n            src={require(`../assets/${leftIconSrc}.svg`)}\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n        />\n    ) : undefined\n\n    var rightIcon = rightIconSrc ? (\n        <img \n            alt=\"\"\n            src={require(`../assets/${rightIconSrc}.svg`)}\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n        />\n    ) : undefined\n\n    if (this.state.leftRedirect && this.props.leftRedirectRoute !== undefined) {\n        return this.redirect(this.props.leftRedirectRoute);\n    }\n\n    if (this.state.rightRedirect && this.props.rightRedirectRoute !== undefined) {\n        return this.redirect(this.props.rightRedirectRoute);\n    }\n\n    return (\n        <div>\n            <Navbar style={style.navSpacing}>\n                <Navbar style={style.navSpacing}>\n                    {/* TODO: Update href */}\n                    <Navbar.Brand onClick={this.onLeftPress} style={style.logoContainer}>\n                        {leftIcon}\n                    </Navbar.Brand>\n                </Navbar>\n                <Navbar style={style.navSpacing}>\n                    {/* TODO: Update href */}\n                    <Navbar.Brand href=\"/#/select\" style={style.logoContainer}>\n                    <img\n                        alt=\"\"\n                        src={require(\"../assets/hiss.svg\")}\n                        width=\"30\"\n                        height=\"30\"\n                        className=\"d-inline-block align-top\"\n                    />\n                    </Navbar.Brand>\n                </Navbar>\n                <Navbar style={style.navSpacing}>\n                    {/* TODO: Update href */}\n                    <Navbar.Brand onClick={this.onRightPress} style={style.logoContainer}>\n                        {rightIcon}\n                    </Navbar.Brand>\n                </Navbar>\n            </Navbar>\n        </div>\n    );\n  }\n}\n\nconst style : { [key: string]: React.CSSProperties } = {\n    logoContainer : {\n        marginRight: \"0px\",\n        width: \"30px\"\n    },\n    navSpacing: {\n        justifyContent: \"space-between\"\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLoggedIn: state.auth.isLoggedIn,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    logout: () => dispatch(actions.logout())\n});\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(TopNavbar);\n","import React from 'react';\nimport QrReader from 'react-qr-reader';\nimport ConfirmModal from '../ConfirmModal/ConfirmModal';\nimport { LoginData, QRData } from '../../types/TypeObjects';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { AppActions } from '../../types/actions';\nimport * as actions from '../../redux/actions/selectionActions';\nimport Button from 'react-bootstrap/Button';\nimport 'rodal/lib/rodal.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TopNavbar from './../../Components/navbar';\nimport Select from 'react-select'\nimport { Redirect } from 'react-router-dom';\n\nimport { toast, ToastContainer } from 'react-toastify';\nimport { commonToastProperties } from './../../Components/toast';\n\ninterface IProps {\n  isLoggedIn: boolean;\n  isLoading: boolean;\n  userData: LoginData;\n  error: string;\n  event: string;\n  attribute: string;\n  login: (email: string, password: string) => Promise<object>;\n  updateSelection: (event: string, attribute: string) => Dispatch<AppActions>;\n}\n\ninterface IState {\n  event: string;\n  attribute: string;\n  qrData: QRData;\n  delay: number;\n  frontCamera: boolean;\n  confirmVisible: boolean;\n  redirectToLogin: boolean;\n}\n\nclass QRScan extends React.PureComponent<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {qrData: {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n    },\n    event: this.props.event,\n    attribute: this.props.attribute,\n    delay: 500, \n    frontCamera: true, \n    confirmVisible: false,\n    redirectToLogin: false}\n  }\n\n  componentDidMount() {\n    if(this.props.userData == undefined) {\n      toast.error(\"Not Logged In\", {\n        ...commonToastProperties, \n        onClose: () => this.setState({ redirectToLogin: true })\n      });\n    }\n  }\n\n  handleScan = async (data: string) => {\n    if(data === null || this.state.confirmVisible) {\n      return;\n    }\n    try {\n      var qrObj = JSON.parse(data);\n      if(Object.prototype.hasOwnProperty.call(qrObj, 'email') && \n        Object.prototype.hasOwnProperty.call(qrObj, 'first_name') && \n        Object.prototype.hasOwnProperty.call(qrObj, 'last_name')) {\n\n        this.setState({ qrData: qrObj, confirmVisible: true });\n      } else {\n        toast.success(\"QR scan successful.\", commonToastProperties);\n      }\n    } catch (exception) {\n      toast.error(exception, {...commonToastProperties, autoClose: 3000});\n    }\n  }\n\n  switchCamera = () => {\n    this.setState({frontCamera: !this.state.frontCamera});\n  }\n\n  show = () => {\n    this.setState({ confirmVisible: true });\n  }\n\n  hide = () => {\n    this.setState({ confirmVisible: false });\n  }\n\n\n  // Gets called every time the first select form has an option change.\n  eventSelectChange = (option, actions) => {\n    var val = option ? option.value : \"\";\n    if(val !== \"\") {\n      this.props.updateSelection(val, \"NONE\");\n    }\n    \n    this.setState({\n      event: val,\n      // Every event has a none options so this is the default. Stylistic change \n      attribute: \"NONE\"\n    })\n  }\n\n  // Gets called every time the second select form has an option change.\n  attributeSelectChange = (option, actions) => {\n    var val = option ? option.value : \"\";\n    if(val !== \"\") {\n      this.props.updateSelection(this.props.event, val);\n    }\n    this.setState({\n      attribute: val\n    })\n  }\n\n  // Using the event state determine what options to return.\n  // These will be displayed on the second dropdown\n  determineAttributes = () => {\n    // https://github.com/tamuhack-org/Ouroboros/blob/86da19f7354388b77d3bda958f7054426debd728/hiss/volunteer/models.py#L6\n    var foodChoices = [\n      { value: 'NONE', label: 'None'},\n      { value: 'VEGAN', label: 'Vegan'},\n      { value: 'VEGETARIAN', label: 'Vegetarian'},\n      { value: 'HALAL', label: 'Halal'},\n      { value: 'KOSHER', label: 'Kosher'},\n      { value: 'GLUTEN_FREE', label: 'Gluten-free'},\n      { value: 'FOOD_ALLERGY', label: 'Food allergy'},\n      { value: 'DIETARY_RESTRICTION_OTHER', label: 'Other'}\n    ]\n    if(this.state.event) {\n      // Options must match the eventOptions values\n      var options =  {\n        \"checked_in\": [ { value: 'NONE', label: 'N/A'}, ],\n        \"BREAKFAST\": foodChoices,\n        \"LUNCH\": foodChoices,\n        \"DINNER\": foodChoices,\n        \"MIDNIGHT_SNACK\": foodChoices,\n        \"WorkshopEvent\": [ { value: 'NONE', label: 'N/A'}, ]\n      }\n      return this.state.event in options ? options[this.state.event] : undefined\n    }\n    return undefined\n  }\n\n  render() {\n    var {\n      event,\n      attribute,\n      redirectToLogin\n    } = this.state;\n\n    if(redirectToLogin) {\n      return <Redirect to='/' />\n    }\n\n    const cameraString = this.state.frontCamera ? 'user' : 'environment';\n\n    // https://github.com/tamuhack-org/Ouroboros/blob/d1bafcdfaf6b54eaf7bf9a6720373e0bd3ec8855/hiss/volunteer/views.py\n    const eventOptions = [\n      { value: 'checked_in', label: 'Check In' },\n      { value: 'BREAKFAST', label: 'Breakfast' },\n      { value: 'LUNCH', label: 'Lunch' },\n      { value: 'DINNER', label: 'Dinner' },\n      { value: 'MIDNIGHT_SNACK', label: 'Midnight Snack' },\n      { value: 'WorkshopEvent', label: 'Workshop' }\n    ]\n\n    const attributeOptions = this.determineAttributes()\n\n    // Formats the individual options in the select tags (react-select)\n    const formatGroupLabel = data => (\n      <div style={style.groupStyles}>\n        <span>{data.label}</span>\n        <span style={style.groupBadgeStyles}>{data.options.length}</span>\n      </div>\n    );\n\n    return (\n      <div>\n        <TopNavbar leftIconSrc=\"arrowleft\" rightIconSrc=\"magnifying\" leftRedirectRoute=\"/select\" rightRedirectRoute=\"/search\"/>\n        <div style={style.pageContainer}>\n          {/* Selection Container */}\n          <div style={style.selectionContainer}>\n            <div style={style.halfContainer}>\n              <Select\n                options={eventOptions}\n                formatGroupLabel={formatGroupLabel}\n                placeholder=\"Event\"\n                isClearable={true}\n                isSearchable={ false }\n                styles={{\n                  // https://stackoverflow.com/questions/55830799/how-to-change-zindex-in-react-select-drowpdown\n                  menu: provided => ({ ...provided, zIndex: 9999 })\n                }}\n                defaultValue={event == \"\" ? undefined : eventOptions.filter( v => v['value'] == event )[0]}\n                onChange={this.eventSelectChange}\n              />\n            </div>\n            <div style={style.halfContainer}>\n              <Select\n                options={attributeOptions}\n                formatGroupLabel={formatGroupLabel}\n                placeholder=\"Attribute\"\n                isClearable={true}\n                isDisabled={event == \"\" || event == \"checked_in\" || event == \"WorkshopEvent\"}\n                value= {\n                  attribute == \"\" || attributeOptions == undefined ? \n                  undefined : attributeOptions.filter( v => v['value'] == attribute )[0]\n                }\n                styles={{\n                  // https://stackoverflow.com/questions/55830799/how-to-change-zindex-in-react-select-drowpdown\n                  menu: provided => ({ ...provided, zIndex: 9999 })\n                }}\n                onChange={this.attributeSelectChange}\n                isSearchable={ false }\n              />\n            </div>\n          </div>\n          <div>\n            <QrReader\n              style={{width: '100%', marginBottom: 20, alignItems: 'center', alignSelf: 'center', justifyContent: 'center'}}\n              delay={this.state.delay}\n              onScan={this.handleScan}\n              facingMode={cameraString}\n            />\n            <Button\n              style={style.switchCameraContainer}\n              onClick={this.switchCamera}>\n              Switch Camera\n            </Button>\n          </div>\n          <ConfirmModal \n            qrData={this.state.qrData}\n            modalVisible={this.state.confirmVisible}\n            closeModal={this.hide}\n          />\n        </div>\n\n        <ToastContainer autoClose={1500} />\n      </div>\n    );\n  }\n}\n\nconst style : { [key: string]: React.CSSProperties } = {\n  pageContainer : {\n    display: 'flex',\n    height: 'calc(100vh - 72px)',\n    width: '100vw',\n    alignItems: 'center',\n    flexDirection: 'column',\n    backgroundColor: 'white',\n    // paddingTop: '10vh'\n  },\n  selectionContainer: {\n    padding: '30px 10px',\n    marginBottom: \"10px\",\n    backgroundColor: \"#FF7C93\",\n    width: '100vw',\n  },\n  switchCameraContainer: {\n    width: '80vw',\n    height: '56px',\n    backgroundColor: '#FF7C93',\n    border: 0,\n    outline: 0\n  },\n  modalContainer: {\n    display: 'flex',\n    backgroundColor: 'white',\n    height: 350,\n    padding: 30,\n  },\n  checkInStatusRow: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    border: '5px solid #5CD059',\n    marginBottom: 50,\n    paddingTop: 5,\n    paddingBottom: 5\n  },\n  emailRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 10,\n    paddingTop: 0,\n    marginBottom: 20,\n    borderBottom: '1px #DEDEDE solid',\n  },\n\n  // Default React-Select styles\n  groupBadgeStyles: {\n    backgroundColor: '#EBECF0',\n    borderRadius: '2em',\n    color: '#172B4D',\n    display: 'inline-block',\n    fontSize: 12,\n    fontWeight: 'normal',\n    lineHeight: '1',\n    minWidth: 1,\n    width: \"200px;\",\n    padding: '0.16666666666667em 0.5em',\n    textAlign: 'center',\n  },\n\n  // Default React-Select styles\n  groupStyles: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  halfContainer: {\n    width: \"50%\",\n    padding: \"0px 5px\",\n    display: \"inline-block\"\n  }\n  \n};\n\nconst mapStateToProps = state => ({\n  event: state.selection.event,\n  attribute: state.selection.attribute,\n  userData: state.auth.userData,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateSelection: (event:string, attribute:string) => dispatch(actions.updateSelection(event, attribute))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QRScan);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { AppActions } from '../../types/actions';\nimport * as actions from '../../redux/actions/selectionActions';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Select from 'react-select'\nimport Button from 'react-bootstrap/Button';\nimport TopNavbar from './../../Components/navbar';\nimport { LoginData } from '../../types/TypeObjects';\n\nimport { toast, ToastContainer } from 'react-toastify';\nimport { commonToastProperties } from './../../Components/toast';\n\ninterface IProps {\n  event: string;\n  attribute: string;\n  userData: LoginData,\n  updateSelection: (event: string, attribute: string) => Dispatch<AppActions>;\n}\n\ninterface IState {\n  event: string;\n  attribute: string;\n  redirectToScan: boolean;\n  redirectToLogin: boolean;\n}\n\nclass Selection extends React.PureComponent<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      event: this.props.event,\n      attribute: this.props.attribute,\n      redirectToScan: false,\n      redirectToLogin: false // this.props.userData === undefined\n    }\n  }\n\n  componentDidMount() {\n    if(this.props.userData == undefined) {\n      toast.error(\"Not Logged In\", {\n        ...commonToastProperties, \n        onClose: () => this.setState({ redirectToLogin: true })\n      });\n    }\n  }\n\n\n  // Gets called every time the first select form has an option change.\n  eventSelectChange = (option, actions) => {\n    var val = option ? option.value : \"\";\n    this.setState({\n      event: val,\n      // Every event has a none options so this is the default. Stylistic change \n      attribute: \"NONE\"\n    })\n  }\n\n  // Gets called every time the second select form has an option change.\n  attributeSelectChange = (option, actions) => {\n    var val = option ? option.value : \"\";\n    this.setState({\n      attribute: val\n    })\n  }\n\n  // Using the event state determine what options to return.\n  // These will be displayed on the second dropdown\n  determineAttributes = () => {\n    // https://github.com/tamuhack-org/Ouroboros/blob/86da19f7354388b77d3bda958f7054426debd728/hiss/volunteer/models.py#L6\n    var foodChoices = [\n      { value: 'NONE', label: 'None'},\n      { value: 'VEGAN', label: 'Vegan'},\n      { value: 'VEGETARIAN', label: 'Vegetarian'},\n      { value: 'HALAL', label: 'Halal'},\n      { value: 'KOSHER', label: 'Kosher'},\n      { value: 'GLUTEN_FREE', label: 'Gluten-free'},\n      { value: 'FOOD_ALLERGY', label: 'Food allergy'},\n      { value: 'DIETARY_RESTRICTION_OTHER', label: 'Other'}\n    ]\n    if(this.state.event) {\n      // Options must match the eventOptions values\n      var options =  {\n        \"checked_in\": [ { value: 'NONE', label: 'N/A'}, ],\n        \"BREAKFAST\": foodChoices,\n        \"LUNCH\": foodChoices,\n        \"DINNER\": foodChoices,\n        \"MIDNIGHT_SNACK\": foodChoices,\n        \"WorkshopEvent\": [ { value: 'NONE', label: 'N/A'}, ]\n      }\n      return this.state.event in options ? options[this.state.event] : undefined\n    }\n    return undefined\n  }\n\n  handleScanSubmit = () => {\n    this.props.updateSelection(this.state.event, this.state.attribute);\n    this.setState({ redirectToScan: true });\n    // TODO Alert user about invalid selection\n  }\n\n  isDisabled = () => {\n    \n  }\n\n  render() {\n    var {\n      event,\n      attribute,\n      redirectToScan,\n      redirectToLogin\n    } = this.state;\n\n    if(redirectToLogin) {\n      return <Redirect to='/' />\n    }\n\n    if(redirectToScan) {\n      return <Redirect to='/scan' />\n    }\n\n    // https://github.com/tamuhack-org/Ouroboros/blob/d1bafcdfaf6b54eaf7bf9a6720373e0bd3ec8855/hiss/volunteer/views.py\n    const eventOptions = [\n      { value: 'checked_in', label: 'Check In' },\n      { value: 'BREAKFAST', label: 'Breakfast' },\n      { value: 'LUNCH', label: 'Lunch' },\n      { value: 'DINNER', label: 'Dinner' },\n      { value: 'MIDNIGHT_SNACK', label: 'Midnight Snack' },\n      { value: 'WorkshopEvent', label: 'Workshop' }\n    ]\n\n    const attributeOptions = this.determineAttributes()\n\n    // Formats the individual options in the select tags (react-select)\n    const formatGroupLabel = data => (\n      <div style={style.groupStyles}>\n        <span>{data.label}</span>\n        <span style={style.groupBadgeStyles}>{data.options.length}</span>\n      </div>\n    );\n\n    return (\n      <div>\n        <TopNavbar leftIconSrc=\"isymbol\" rightIconSrc=\"logout\" leftRedirectRoute=\"/info\" rightRedirectRoute=\"/\" />\n        <div style={style.pageContainer}>\n          <h2 style={{ fontSize: '36px', color: \"#FF7C93\", marginBottom: \"40px\" }}>\n            Select a scan...\n          </h2>\n\n          {/* React-Select component */}\n          <Select\n            options={eventOptions}\n            formatGroupLabel={formatGroupLabel}\n            placeholder=\"Event\"\n            isClearable={true}\n            isSearchable={ false }\n            // Uses the event state to determine if any objects in the eventOptions array have a value equal to event. \n            //  If so, return the first object where this is valid. (This logic is repeated 4 times) to select the defaul. \n            defaultValue={event == \"\" ? undefined : eventOptions.filter( v => v['value'] == event )[0]}\n            onChange={this.eventSelectChange}\n          />\n          <br />\n\n          {/* React-Select component */}\n          <Select\n            options={attributeOptions}\n            formatGroupLabel={formatGroupLabel}\n            placeholder=\"Attribute\"\n            isClearable={true}\n            isDisabled={event == \"\" || event == \"checked_in\" || event == \"WorkshopEvent\"}\n            value= {\n              attribute == \"\" || attributeOptions == undefined ? \n              undefined : attributeOptions.filter( v => v['value'] == attribute )[0]\n            }\n            onChange={this.attributeSelectChange}\n            isSearchable={ false }\n          />\n          <br />\n\n          <Button block\n            style={{border: \"1px solid #FF7C93\", backgroundColor: \"#FF7C93\"}}\n            onClick={this.handleScanSubmit}\n            disabled={! (event && attribute)}\n          >\n            Start Scanning\n          </Button>\n        </div>\n\n        <ToastContainer autoClose={1500} />\n      </div>\n    );\n  }\n}\nconst style : { [key: string]: React.CSSProperties } = {\n\n  // Changed, no longer flex and MarginTop is hardcoded\n  pageContainer : {\n    padding: \"20px\",\n    marginTop: \"12vh\",\n    width: '100vw',\n  },\n\n  // Default React-Select styles\n  groupBadgeStyles: {\n    backgroundColor: '#EBECF0',\n    borderRadius: '2em',\n    color: '#172B4D',\n    display: 'inline-block',\n    fontSize: 12,\n    fontWeight: 'normal',\n    lineHeight: '1',\n    minWidth: 1,\n    width: \"200px;\",\n    padding: '0.16666666666667em 0.5em',\n    textAlign: 'center',\n  },\n\n  // Default React-Select styles\n  groupStyles: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  }\n};\n\nconst mapStateToProps = state => ({\n  event: state.selection.event,\n  attribute: state.selection.attribute,\n  userData: state.auth.userData\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateSelection: (event:string, attribute:string) => dispatch(actions.updateSelection(event, attribute))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selection);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport axios from 'axios';\nimport TopNavbar from './../../Components/navbar';\nimport ConfirmModal from '../ConfirmModal/ConfirmModal';\nimport { QRData, LoginData } from '../../types/TypeObjects';\nimport { Redirect } from 'react-router-dom';\n\nimport { toast, ToastContainer } from 'react-toastify';\nimport { commonToastProperties } from './../../Components/toast';\n\ninterface IProps {\n  event: string;\n  token: number\n  attribute: string;\n  userData: LoginData;\n}\n\ninterface IState {\n    event: string;\n    attribute: string;\n\n    name: string;\n    displayUsers: boolean;\n    users: Array<any>;\n\n    modalVisible: boolean;\n    participantData: QRData;\n\n    redirectToLogin: boolean;\n}\n\nclass Selection extends React.PureComponent<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n        event: \"\",\n        attribute: \"\",\n        name: \"\",\n\n        displayUsers: false,\n        users: [],\n\n        modalVisible: false,\n        participantData: {\n          \"email\": \"\",\n          \"first_name\": \"\",\n          \"last_name\": \"\"\n        },\n\n        redirectToLogin: false // this.props.userData === undefined\n    }\n  }\n\n  componentDidMount() {\n    if(this.props.userData == undefined) {\n      toast.error(\"Not Logged In\", {\n        ...commonToastProperties, \n        onClose: () => this.setState({ redirectToLogin: true })\n      });\n    }\n  }\n\n  showModal = () => {\n    this.setState({ modalVisible: true });\n  }\n\n  closeModal = () => {\n    this.setState({ modalVisible: false });\n  }\n  \n  setParticipantData = (user) => {\n    this.setState({ participantData: user}, () => {\n      this.setState({ modalVisible: true });\n    });\n  }\n\n  nameHandler = (event) => {\n    this.setState({ name: event.target.value });\n  }\n\n  // Calls the api/volunteer/search endpoint\n  // NOTE: There is no hard cap or limit checking. A person can type \" \" and get every user for instance\n  handleSearchSubmit = () => {\n    var {\n      name,\n      event,\n      attribute\n    } = this.state\n\n    // Token taken from Redux State\n    // This will get reset each server restart. This means you will have to visit the login page again.\n \n    var token = this.props.userData.data.token;\n\n    if(name && token) {\n      return axios.get(\n        `https://register.tamuhack.com/api/volunteer/search?q=${name}`,\n        {\n          headers: {\n            'Authorization': `Token ${token}`\n          }\n        }\n      ).then(response => {\n        var responseData = response.data.results\n        \n        if(responseData.length == 0) {\n          toast.warn(\"Search found no users.\", commonToastProperties);\n        } else {\n          toast.success(`Search found ${responseData.length} user${responseData.length == 1 ? '': 's'}.`, commonToastProperties);\n        }\n        this.setState({users: responseData})\n      }).catch(error => {\n        toast.error(\"Invalid API Call\", {...commonToastProperties, autoClose: 3000});\n      });\n    } else {\n      toast.error(\"Invalid API Call\", {...commonToastProperties, autoClose: 3000});\n    }\n  }\n\n  render() {\n    var {\n        name,\n        users,\n        redirectToLogin\n    } = this.state;\n\n    if(redirectToLogin) {\n      return <Redirect to='/' />\n    }\n\n    if(this.props.userData === undefined) {\n      console.log('ERROR')\n      toast.error(\"Not Logged In\", {\n        ...commonToastProperties, \n        onClose: () => this.setState({ redirectToLogin: true })\n      });\n    }\n\n    return (\n      <div>\n        <TopNavbar leftIconSrc=\"arrowleft\" leftRedirectRoute=\"/scan\"/>\n        <div style={style.pageContainer}>\n          <InputGroup className=\"mb-3\">\n              <FormControl\n                  style={{fontSize: \"18px\"}}\n                  placeholder=\"Search User\"\n                  onChange={this.nameHandler}\n              />\n          </InputGroup>\n\n          <Button block\n            style={{border: \"1px solid #FF7C93\", backgroundColor: \"#FF7C93\"}}\n            onClick={this.handleSearchSubmit}\n            disabled={! (name)}\n            size=\"lg\"\n          > Search </Button>\n          <div style={{marginTop: \"10px\"}}>\n              {\n                // For each user \n                users.map((user, index) => {\n                    // Return this HTML \n                    return (\n                        <div onClick={() => this.setParticipantData(user)} style={{borderTop: \"1px solid black\", padding: \"5px 0px 5px 0px\"}} key={index}>\n                            <h5 style={{margin: \"0px\"}}>\n                                {user.first_name} {user.last_name}\n                                <span style={{float: 'right', marginTop: \"4px\"}}>\n                                  <svg style={{width: \"40px\", height: \"40px\"}} viewBox=\"0 0 24 24\"><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n                                </span>\n                            </h5>\n                            <p style={{margin: \"0px\"}}>\n                                {user.email}\n                            </p>\n                        </div>\n                    )\n                })\n              }\n          </div>\n          <ConfirmModal\n            qrData={this.state.participantData}\n            modalVisible={this.state.modalVisible}\n            closeModal={this.closeModal}\n          />\n          {/* Render Toast (This can go anywhere inside the render. It doesn't have to be at bottom) */}\n          <ToastContainer autoClose={1500} />\n        </div>\n      </div>\n    );\n  }\n}\nconst style : { [key: string]: React.CSSProperties } = {\n  pageContainer : {\n    padding: \"20px\",\n    marginTop: \"20px\",\n    width: '100vw',\n  }\n};\n\nconst mapStateToProps = state => ({\n  userData: state.auth.userData\n  /*event: state.selection.eventName,\n  attribute: state.selection.attribute,*/\n});\n\nconst mapDispatchToProps = dispatch => ({\n  /*login: (email:string, password:string) => dispatch(actions.login(email, password))*/\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selection);","import React from 'react';\nimport { HashRouter, Switch, Route, Router } from 'react-router-dom';\nimport Login from './Login/Login';\nimport QRScan from './QRScan/QRScan';\nimport Selection from './Selection/Selection';\nimport Search from './Search/Search';\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <HashRouter basename='/'>\n        <Switch>\n          <Route path={'/scan'} component={QRScan} />\n          <Route path={'/select'} component={Selection} />\n          <Route path={'/search'} component={Search} />\n          <Route path={'/'} component={Login} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { AuthActionTypes } from '../../types/actions';\n\nconst INITIAL_STATE: object = {\n  isLoggedIn: false,\n  isLoading: false,\n  userData: undefined,\n  error: undefined\n};\n\nexport default function auth(state = INITIAL_STATE, action: AuthActionTypes): object {\n  switch (action.type) {\n    case 'LOGIN_ATTEMPT':\n      return {\n        ...state,\n        isLoading: true,\n        isLoggedIn: false\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isLoggedIn: true,\n        userData: action.userData,\n        error: undefined\n      };\n    case 'LOGIN_FAILED':\n      return {\n        ...state,\n        isLoading: false,\n        isLoggedIn: false,\n        error: action.error\n      };\n    case 'LOGOUT':\n      return {\n        userData: undefined,\n        isLoading: false,\n        isLoggedIn: false,\n        error: undefined\n      };\n    default:\n      return state;\n  }\n}\n","import { SelectionActionTypes } from '../../types/actions';\n\nconst INITIAL_STATE: object = {\n  event: \"\",\n  attribute: \"\"\n};\n\nexport default function selection(state = INITIAL_STATE, action: SelectionActionTypes): object {\n  switch (action.type) {\n    case 'SELECTION_SUCCESS':\n      return {\n        event: action.event,\n        attribute: action.attribute\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport auth from './authReducer';\nimport selection from './selectionReducer';\n\nconst rootReducer = combineReducers({\n  auth,\n  selection\n});\n\nexport type AppState = ReturnType<typeof rootReducer>\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/index';\n\nconst persistConfig = {\n    key: 'root',\n    storage\n}\n\nconst reducers = persistReducer(persistConfig, rootReducer);\nconst middlewares = [thunk];\n\nconst store = createStore(\n    reducers,\n    undefined,\n    compose(applyMiddleware(...middlewares))\n)\nconst persistor = persistStore(store);\n\nexport { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Pages/Routes';\nimport Login from './Pages/Login/Login';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ReduxApp = () => {\n  return (\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <Routes />\n        </PersistGate>\n    </Provider>\n  )\n}\n\nReactDOM.render(<ReduxApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/hiss_full_logo.396f0bda.svg\";","var map = {\n\t\"./arrowleft.svg\": 103,\n\t\"./arrowright.svg\": 104,\n\t\"./hiss.svg\": 59,\n\t\"./hiss_full_logo.svg\": 56,\n\t\"./isymbol.svg\": 105,\n\t\"./logout.svg\": 106,\n\t\"./magnifying.svg\": 107\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 58;","module.exports = __webpack_public_path__ + \"static/media/hiss.768b0a92.svg\";"],"sourceRoot":""}
{"version":3,"sources":["assets/arrowleft.svg","assets/arrowright.svg","assets/isymbol.svg","assets/logout.svg","assets/magnifying.svg","Components/toast.tsx","Pages/Login/Login.tsx","redux/actions/authActions.ts","Pages/ConfirmModal/ConfirmModal.tsx","redux/actions/selectionActions.ts","Components/navbar.tsx","Pages/QRScan/QRScan.tsx","Pages/Selection/Selection.tsx","Pages/Search/Search.tsx","Pages/Routes.tsx","serviceWorker.ts","redux/reducers/authReducer.ts","redux/reducers/selectionReducer.ts","redux/reducers/index.ts","redux/store/index.ts","index.tsx","assets/hiss_full_logo.svg","assets sync /^/.//.*/.svg$","assets/hiss.svg"],"names":["module","exports","commonArgs","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","Toast","props","generateToast","type","text","callback","cases","toast","info","success","warn","error","key","toLocaleLowerCase","toastOptions","this","dismiss","style","display","React","PureComponent","Login","emailHandler","event","setState","email","target","value","passwordHandler","password","bind","state","submitColor","redirectToSelection","loginFailed","loginSuccess","currentToastID","toastText","login","then","createFailureToast","createSuccessToast","to","failureToast","id","undefined","successToast","pageContainer","formContainer","titleContainer","logoContainer","src","require","fontSize","placeholder","onChange","inputContainer","Button","onClick","submitContainer","backgroundColor","marginLeft","height","width","alignItems","marginTop","marginBottom","flexDirection","paddingLeft","paddingRight","outline","color","border","connect","isLoggedIn","auth","isLoading","userData","dispatch","axios","post","headers","response","catch","actions","ConfirmModal","getRegisteredStatus","a","async","modalVisible","checkInStatusUrl","registeredStatus","get","authorization","data","token","checked_in","registerFood","qrData","attribute","exception","registerWorkshop","checkInUser","participantRegistered","checkInEvent","disableSubmit","isRegistered","disable","eventName","buttonTitle","modalContainer","visible","onClose","closeModal","animation","customStyles","justifyContent","badgeContainer","Badge","marginRight","padding","fontWeight","first_name","last_name","emailRow","margin","checkInStatusRow","borderColor","confirmButton","disabled","borderWidth","borderStyle","paddingTop","paddingBottom","borderBottom","selection","updateSelection","selectionSuccess","TopNavbar","redirect","redirectRoute","logout","onLeftPress","leftRedirect","onRightPress","rightRedirect","leftIconSrc","rightIconSrc","leftIcon","leftRedirectRoute","rightRedirectRoute","alt","className","rightIcon","Navbar","navSpacing","Brand","href","QRScan","handleScan","confirmVisible","qrObj","JSON","parse","Object","prototype","hasOwnProperty","call","switchCamera","frontCamera","show","hide","eventSelectChange","option","val","attributeSelectChange","determineAttributes","foodChoices","label","options","delay","redirectToLogin","cameraString","eventOptions","attributeOptions","formatGroupLabel","groupStyles","groupBadgeStyles","length","selectionContainer","halfContainer","isClearable","isSearchable","styles","menu","provided","zIndex","defaultValue","filter","v","isDisabled","alignSelf","onScan","facingMode","switchCameraContainer","borderRadius","lineHeight","minWidth","textAlign","Selection","handleScanSubmit","redirectToScan","block","showModal","setParticipantData","user","participantData","nameHandler","name","handlePopup","console","log","handleSearchSubmit","responseData","results","createWarningToast","displayUsers","users","searchFailed","searchSuccess","warningToast","InputGroup","FormControl","size","map","index","borderTop","float","viewBox","d","fill","Routes","basename","path","component","Search","Component","Boolean","window","location","hostname","match","INITIAL_STATE","rootReducer","combineReducers","action","persistConfig","storage","reducers","persistReducer","middlewares","thunk","store","createStore","compose","applyMiddleware","persistor","persistStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve"],"mappings":"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","file":"static/js/main.a4b139a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrowleft.15dfedc6.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowright.9a8c6bff.svg\";","module.exports = __webpack_public_path__ + \"static/media/isymbol.3f17aa2f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.9a8c6bff.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifying.c6fbba9a.svg\";","import { toast, ToastContainer } from 'react-toastify';\nimport React from 'react';\n\n/*\n    Example: <Toast type=\"error\" text=\"Failed to login.\" id={this.state.currentToastID}/>\n    https://fkhadra.github.io/react-toastify/\n    types:\n        info -> light blue\n        success -> green\n        warning > yellow\n        error -> red\n        default -> white\n    text: What the toast displays\n    id: Needed to keep track of toasts and make sure each are unique. \n*/\n\n// Arguments every toast will have.\nvar commonArgs : object = {\n    position: \"bottom-center\",\n    autoClose: 1500,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true\n}\n\ninterface IProps {\n    type: string;\n    text: string;\n    id: number;\n    callback?: any;\n}\n\ninterface IState {}\n\nclass Toast extends React.PureComponent<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n  }\n\n  // Given the props create the needed toast initializer\n  generateToast = () => {\n    var {\n        type,\n        text,\n        callback\n    } = this.props\n\n\n    // var commonArgsModified = JSON.parse(JSON.stringify(commonArgs));\n\n    // if(this.state.callback)\n    commonArgs[\"onClose\"] = callback;\n\n    var cases = {\n        \"info\": () => toast.info(text, commonArgs),\n        \"success\": () => toast.success(text, commonArgs),\n        \"warning\": () => toast.warn(text, commonArgs),\n        \"error\": () => toast.error(text, commonArgs)\n    }\n\n    var key = type.toLocaleLowerCase();\n\n\n    // Check if key one of the valid ones above, or return default toast (white background)\n    return (key in cases) ? cases[key] : () => toast(text, commonArgs)\n  }\n\n  render() {\n    // Get toast initializer\n    const toastOptions = this.generateToast();\n\n    toast.dismiss();  // <-- Remove all current toasts\n\n    // Return a toast inside a toast container to parent component\n    return (\n        <div>\n            <span style={{display: \"none\"}}>\n                {/* I shouldn't need this, but react inserts random text that I hid here. */}\n                {toastOptions()}\n            </span>\n            <ToastContainer />\n        </div>\n    );\n  }\n}\n\nexport default Toast\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux/actions/authActions';\nimport { LoginData } from '../../types/TypeObjects';\nimport { Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Toast from './../../Components/toast';\n\ninterface IProps {\n  isLoggedIn: boolean;\n  isLoading: boolean;\n  userData: LoginData;\n  error: string;\n  login: (email: string, password: string) => Promise<object>;\n  logout: () => void;\n}\n\ninterface IState {\n  email: string;\n  password: string;\n  submitColor: string;\n  redirectToSelection: boolean;\n\n  // Added state for the toast\n  loginFailed: boolean;\n  loginSuccess: boolean;\n  currentToastID: number;\n  toastText: string;\n}\n\nclass Login extends React.PureComponent<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.emailHandler = this.emailHandler.bind(this);\n    this.passwordHandler = this.passwordHandler.bind(this);\n    this.state = {\n      email: \"\", \n      password: \"\", \n      submitColor: '#FF7C93', \n      redirectToSelection: false, \n      loginFailed: false, \n      loginSuccess: false,\n      currentToastID: 0, \n      toastText: \"\"\n    };\n    // this.props.logout();\n  }\n\n  createFailureToast() {\n    // Create a new toast by toggling the state\n    this.setState({\n      loginFailed: true,\n      loginSuccess: false,\n      toastText: \"Failed to login!\",\n      // Toasts need a unique ID to know when to render\n      currentToastID: this.state.currentToastID + 1\n    })\n  }\n\n  createSuccessToast() {\n    // Create a new toast by toggling the state\n    this.setState({\n      loginSuccess: true,\n      loginFailed: false,\n      toastText: \"Login successfuly!\",\n      // Toasts need a unique ID to know when to render\n      currentToastID: this.state.currentToastID + 1\n    })\n  }\n\n  login() {\n    this.props.login(this.state.email, this.state.password).then(() => {\n      if(this.props.error) {\n        this.createFailureToast()\n      } else {\n        this.createSuccessToast()\n      }\n    });\n  }\n\n  emailHandler = (event) => {\n    this.setState({ email: event.target.value });\n  }\n\n  passwordHandler = (event) => {\n    this.setState({ password: event.target.value });\n  }\n\n  render() {\n    const { redirectToSelection } = this.state;\n    \n    if(redirectToSelection) {\n      return (\n        <Redirect to='/select'/>\n      )\n    }\n\n    // Create the success and failure toast\n    let failureToast = (this.state.loginFailed) ? (\n      <Toast type=\"error\" text={this.state.toastText} id={this.state.currentToastID}/>\n    ) : undefined;\n\n    let successToast = (this.state.loginSuccess) ? (\n      // Note, the call back will reload page and cause the page to redirect once toast is finished. \n      <Toast type=\"success\" text={this.state.toastText} id={this.state.currentToastID} callback={() => this.setState({ redirectToSelection: true })}/>\n    ) : undefined;\n\n    return (\n      <div style={style.pageContainer}>\n        <form style={style.formContainer}>\n          <div style={style.titleContainer}>\n            <img\n              style={style.logoContainer}\n              src={require(\"../../assets/hiss_full_logo.svg\")}\n            />\n            <p style={{ fontSize: '18px' }}>by tamuhack</p>\n          </div>\n          <input\n            type='text'\n            placeholder='Email'\n            value={this.state.email}\n            onChange={this.emailHandler}\n            style={style.inputContainer}\n          />\n          <input\n            type='password'\n            placeholder='Password'\n            value={this.state.password}\n            onChange={this.passwordHandler}\n            style={style.inputContainer}\n          />\n\n          <Button\n            onClick={() => this.login()}\n            style={{...style.submitContainer, backgroundColor: this.state.submitColor}}\n          >\n            Login\n          </Button>\n\n          {/* Render Toast (This can go anywhere inside the render. It doesn't have to be at bottom) */}\n          {failureToast}\n          {successToast}\n\n        </form>\n      </div>\n    );\n  }\n}\n\nconst style : { [key: string]: React.CSSProperties } = {\n  logoContainer : {\n    display: 'flex',\n    marginLeft: '-10px',\n    height: '56px'\n  },\n  pageContainer : {\n    display: 'flex',\n    height: '100vh',\n    width: '100vw',\n    alignItems: 'center',\n  },\n  titleContainer: {\n    marginTop: '27vh',\n    marginBottom: '40px',\n    width: '80vw'\n  },\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100vw',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    height: '100vh',\n  },\n  inputContainer: {\n    height: '57px',\n    width: '80vw',\n    paddingLeft: '4%',\n    marginBottom: '3vh',\n    fontSize: 17,\n    outline: 'none'\n  },\n  submitContainer: {\n    height: '57px',\n    width: '80vw',\n    marginTop: '3vh',\n    color: 'white',\n    fontSize: 20,\n    border: 0\n  },\n};\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.auth.isLoggedIn,\n  isLoading: state.auth.isLoading,\n  userData: state.auth.userData,\n  error: state.auth.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: (email:string, password:string) => dispatch(actions.login(email, password))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import axios from 'axios';\nimport { AppActions } from '../../types/actions';\nimport { Dispatch } from \"redux\";\n\nexport const isLoading = ( loading: boolean ): AppActions => ({\n  type: 'LOGIN_ATTEMPT',\n  isLoading: loading\n});\n\nexport const loginSuccess = ( userData: object ): AppActions => ({\n  type: 'LOGIN_SUCCESS',\n  userData\n});\n\nexport const loginFailed = ( error: object ): AppActions => ({\n  type: 'LOGIN_FAILED',\n  error\n});\n\nexport const logoutComplete = (): AppActions => ({\n  type: 'LOGOUT'\n});\n\nexport const logout = () => {\n  return (dispatch: Dispatch<AppActions>) => {\n    dispatch(logoutComplete());\n  }\n};\n\nexport const login = (email: string, password: string) => {\n  return (dispatch: Dispatch<AppActions>) => {\n    // dispatch(isLoading(true));\n\n    return axios.post(\n      'https://register.tamuhack.com/api/volunteer/login',\n      {\n         email: email,\n         password: password,\n      },\n      {\n         headers: {\n           'content-type': 'application/json',\n         }\n      }\n    ).then(response => {\n      dispatch(loginSuccess(response));\n    }).catch(error => {\n      dispatch(loginFailed(error));\n    });\n  };\n};\n","import React, { CSSProperties } from 'react';\nimport { LoginData, QRData } from '../../types/TypeObjects';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport Rodal from 'rodal';\nimport 'rodal/lib/rodal.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface IProps {\n  userData: LoginData;\n  event: string;\n  attribute: string;\n\n  qrData: QRData;\n  modalVisible: boolean;\n  closeModal: () => void;\n}\n\ninterface IState {\n  participantRegistered: boolean;\n}\n\nclass ConfirmModal extends React.PureComponent<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {participantRegistered: false};\n  }\n\n  getRegisteredStatus = async (email: string) => {\n    if (!this.props.modalVisible) {\n      return false;\n    }\n    var checkInStatusUrl = \"https://register.tamuhack.com/api/volunteer/summary?email=\" + email;\n\n    let registeredStatus = false;\n    await axios.get(\n      checkInStatusUrl,\n      {\n         headers: {\n           'content-type': 'application/json',\n           authorization: 'Token ' + this.props.userData.data.token\n         },\n      }\n    ).then(response => {\n      registeredStatus = response.data.checked_in;\n    }).catch(error => {\n      // TODO\n      // show exception in toast\n    });\n\n    return registeredStatus;\n  }\n\n  registerFood = async () => {\n    const checkInFood = \"https://register.tamuhack.com/api/volunteer/food\";\n\n    await axios.post(checkInFood, \n      {\n        \"email\": this.props.qrData.email,\n        \"meal\": this.props.event,\n        \"restrictions\": this.props.attribute\n      },\n      {\n      headers: {\n        authorization: \"Token \" + this.props.userData.data.token,\n        \"content-type\": \"application/json\"\n      }\n    }).then(response => {\n      // TODO\n      // show success toast\n    }).catch(exception => {\n      // TODO\n      // show exception in toast\n    });\n  };\n\n  registerWorkshop = async () => {\n    const checkInWorkshop = \"https://register.tamuhack.com/api/volunteer/workshops\";\n\n    await axios.post(checkInWorkshop, \n      {\n        \"email\": this.props.qrData.email,\n      },\n      {\n      headers: {\n        authorization: \"Token \" + this.props.userData.data.token,\n        \"content-type\": \"application/json\"\n      }\n    }).then(response => {\n      // TODO \n      // Show success in toast\n    }).catch(exception => {\n      // TODO\n      // Show exception in toast\n    });\n  }\n\n  checkInUser = async () => {\n    const checkInUrl = \"https://register.tamuhack.com/api/volunteer/checkin\";\n\n    await axios.post(checkInUrl, \n      {\n        \"email\": this.props.qrData.email\n      },\n      {\n      headers: {\n        authorization: \"Token \" + this.props.userData.data.token,\n        \"content-type\": \"application/json\"\n      }\n    }).then(response => {\n      this.setState({ participantRegistered: true });\n    }).catch(exception => {\n      // TODO \n      // Show exception in toast\n      this.setState({participantRegistered: false});\n    });\n  };\n\n  checkInEvent = async () => {\n    const event = this.props.event;\n\n    if(event === \"checked_in\") {\n      await this.checkInUser();\n    } else if(event === \"WorkshopEvent\") {\n      await this.registerWorkshop();\n    } else {\n      await this.registerFood();\n    }\n  }\n\n  disableSubmit = () => {\n    if(this.props.event === \"checked_in\") {\n      return this.state.participantRegistered;\n    }\n\n    return !this.state.participantRegistered;\n  }\n\n  async componentDidUpdate() {\n    const isRegistered = await this.getRegisteredStatus(this.props.qrData.email);\n    this.setState({ participantRegistered: isRegistered });\n  }\n\n  render() {\n    const disable = this.disableSubmit();\n\n    var eventName = this.props.event;\n    var attribute = this.props.attribute;\n    var buttonTitle = \"Scan\";\n\n    if(this.props.event === 'checked_in') {\n      eventName = \"Check In\";\n      attribute = \"No Attribute\";\n      buttonTitle = \"Check In\";\n    } else if(this.props.event === 'WorkshopEvent') {\n      eventName = \"Workshop\";\n      attribute = \"No Attribute\";\n    }\n\n    return (\n    <div style={style.modalContainer}>\n        <Rodal \n          visible={this.props.modalVisible} \n          onClose={this.props.closeModal}\n          animation=\"slideUp\"\n          width={'70vw'}\n          height={350}\n          customStyles={{ marginBottom: 0, justifyContent: 'flex-end', paddingLeft: 25, paddingRight: 25 }}\n        >\n          <div style={style.badgeContainer}>\n            <Badge style={{ marginRight: 15, padding: 10, backgroundColor: '#FFD9D9', fontSize: 15 }}>\n              {eventName}\n            </Badge>\n            <Badge style={{ padding: 10, backgroundColor: '#D9EFFF', fontSize: 15 }}>\n              {attribute}\n            </Badge>\n          </div>\n          <div>\n            <p style={{ display: 'flex', fontSize: 23, fontWeight: 'bold' }}>{this.props.qrData.first_name} {this.props.qrData.last_name}</p>\n          </div>\n          <div style={style.emailRow}>\n            <p style={{ fontSize: 16, fontWeight: 'bold', margin: 0, paddingLeft: 0}}>\n              Email\n            </p>\n            <p style={{ fontSize: 14, margin: 0 }}>\n              {this.props.qrData.email}\n            </p>\n          </div>\n          <div style={{...style.checkInStatusRow, borderColor: this.state.participantRegistered ? '#5CD059' : '#FFBFBF', fontSize: 20}}>\n            <p style={{ display: 'flex', margin: 0, padding: 0}}>\n              {this.state.participantRegistered ? 'CHECKED IN' : 'NOT CHECKED IN'}\n            </p>\n          </div>\n          <Button\n            style={style.confirmButton}\n            disabled={disable}\n            onClick={this.checkInEvent}\n          >\n            {buttonTitle}\n          </Button>\n        </Rodal>\n      </div>\n      );\n    }\n  }\n  \n    const style : { [key: string]: React.CSSProperties } = {\n        modalContainer: {\n            display: 'flex',\n            backgroundColor: 'white',\n            height: 350,\n            padding: 30,\n        },\n        checkInStatusRow: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderWidth: '5px',\n            borderStyle: 'solid',\n            marginBottom: 50,\n            paddingTop: 5,\n            paddingBottom: 5\n        },\n        emailRow: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            padding: 0,\n            paddingBottom: 10,\n            marginBottom: 20,\n            borderBottom: '1px #DEDEDE solid',\n        },\n        confirmButton: {\n            display: 'flex', \n            justifyContent: 'center', \n            width: '100%', \n            height: '60px', \n            backgroundColor: '#FF7C93', \n            border: '0', \n            fontSize: '18px'\n        },\n        badgeContainer: {\n            display: 'flex', \n            flexDirection: 'row', \n            paddingBottom: 0, \n            marginBottom: 15\n        }\n    };\n\n    const mapStateToProps = state => ({\n        event: state.selection.event,\n        attribute: state.selection.attribute,\n        userData: state.auth.userData,\n    });\n\n    export default connect(mapStateToProps)(ConfirmModal);\n  ","import { AppActions } from '../../types/actions';\nimport { Dispatch } from \"redux\";\n\nexport const selectionSuccess = ( event: string, attribute: string ): AppActions => ({\n  type: 'SELECTION_SUCCESS',\n  event,\n  attribute\n});\n\nexport const updateSelection = (event: string, attribute: string) => {\n  return (dispatch: Dispatch<AppActions>) => {\n    dispatch(selectionSuccess(event, attribute));\n  };\n};\n","import Navbar from 'react-bootstrap/Navbar'\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport * as actions from '../redux/actions/authActions';\nimport { connect } from 'react-redux';\n\n/*\n    Props leftIconSrc and rightIconSrc have to match the name exactly of the .svg file in @/src/assets\n*/\ninterface IProps {\n    leftIconSrc? : string;\n    rightIconSrc? : string;\n    leftRedirectRoute? : string;\n    rightRedirectRoute? : string;\n    logout: () => void;\n    /*\n        TODO: Have the sources to redirect when clicked\n    */\n}\n\ninterface IState {\n    leftRedirect: boolean;\n    rightRedirect: boolean;\n}\n\nclass TopNavbar extends React.PureComponent<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {leftRedirect: false, rightRedirect: false};\n  }\n\n  redirect = (redirectRoute: string) => {\n    if(redirectRoute === \"/\") {\n        this.props.logout();\n    }\n    return <Redirect to={redirectRoute} />\n  }\n\n  onLeftPress = () => {\n    this.setState({ leftRedirect: true });\n  }\n\n  onRightPress = () => {\n    this.setState({ rightRedirect: true });\n  }\n\n  render() {\n    var {\n        leftIconSrc,\n        rightIconSrc,\n        leftRedirectRoute,\n        rightRedirectRoute\n    } = this.props;\n\n    var leftIcon = leftIconSrc ? (\n        <img \n            alt=\"\"\n            src={require(`../assets/${leftIconSrc}.svg`)}\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n        />\n    ) : undefined\n\n    var rightIcon = rightIconSrc ? (\n        <img \n            alt=\"\"\n            src={require(`../assets/${rightIconSrc}.svg`)}\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n        />\n    ) : undefined\n\n    if (this.state.leftRedirect && this.props.leftRedirectRoute !== undefined) {\n        return this.redirect(this.props.leftRedirectRoute);\n    }\n\n    if (this.state.rightRedirect && this.props.rightRedirectRoute !== undefined) {\n        return this.redirect(this.props.rightRedirectRoute);\n    }\n\n    return (\n        <div>\n            <Navbar style={style.navSpacing}>\n                <Navbar style={style.navSpacing}>\n                    {/* TODO: Update href */}\n                    <Navbar.Brand onClick={this.onLeftPress} style={style.logoContainer}>\n                        {leftIcon}\n                    </Navbar.Brand>\n                </Navbar>\n                <Navbar style={style.navSpacing}>\n                    {/* TODO: Update href */}\n                    <Navbar.Brand href=\"/#/select\" style={style.logoContainer}>\n                    <img\n                        alt=\"\"\n                        src={require(\"../assets/hiss.svg\")}\n                        width=\"30\"\n                        height=\"30\"\n                        className=\"d-inline-block align-top\"\n                    />\n                    </Navbar.Brand>\n                </Navbar>\n                <Navbar style={style.navSpacing}>\n                    {/* TODO: Update href */}\n                    <Navbar.Brand onClick={this.onRightPress} style={style.logoContainer}>\n                        {rightIcon}\n                    </Navbar.Brand>\n                </Navbar>\n            </Navbar>\n        </div>\n    );\n  }\n}\n\nconst style : { [key: string]: React.CSSProperties } = {\n    logoContainer : {\n        marginRight: \"0px\",\n        width: \"30px\"\n    },\n    navSpacing: {\n        justifyContent: \"space-between\"\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLoggedIn: state.auth.isLoggedIn,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    logout: () => dispatch(actions.logout())\n});\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(TopNavbar);\n","import React from 'react';\nimport QrReader from 'react-qr-reader';\nimport ConfirmModal from '../ConfirmModal/ConfirmModal';\nimport { LoginData, QRData } from '../../types/TypeObjects';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { AppActions } from '../../types/actions';\nimport * as actions from '../../redux/actions/selectionActions';\nimport Button from 'react-bootstrap/Button';\nimport 'rodal/lib/rodal.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TopNavbar from './../../Components/navbar';\nimport Select from 'react-select'\nimport { Redirect } from 'react-router-dom';\n\ninterface IProps {\n  isLoggedIn: boolean;\n  isLoading: boolean;\n  userData: LoginData;\n  error: string;\n  event: string;\n  attribute: string;\n  login: (email: string, password: string) => Promise<object>;\n  updateSelection: (event: string, attribute: string) => Dispatch<AppActions>;\n}\n\ninterface IState {\n  event: string;\n  attribute: string;\n  qrData: QRData;\n  delay: number;\n  frontCamera: boolean;\n  confirmVisible: boolean;\n  redirectToLogin: boolean;\n}\n\nclass QRScan extends React.PureComponent<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {qrData: {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n    },\n    event: this.props.event,\n    attribute: this.props.attribute,\n    delay: 500, \n    frontCamera: true, \n    confirmVisible: false,\n    redirectToLogin: this.props.userData === undefined}\n  }\n\n  handleScan = async (data: string) => {\n    if(data === null || this.state.confirmVisible) {\n      return;\n    }\n    try {\n      var qrObj = JSON.parse(data);\n      if(Object.prototype.hasOwnProperty.call(qrObj, 'email') && \n        Object.prototype.hasOwnProperty.call(qrObj, 'first_name') && \n        Object.prototype.hasOwnProperty.call(qrObj, 'last_name')) {\n\n        this.setState({ qrData: qrObj, confirmVisible: true });\n      } else {\n        // TODO\n        // Toast for Valid code with invalid properties\n      }\n    } catch (exception) {\n      // TODO \n      // Toast for invalid QR Code\n    }\n  }\n\n  switchCamera = () => {\n    this.setState({frontCamera: !this.state.frontCamera});\n  }\n\n  show = () => {\n    this.setState({ confirmVisible: true });\n  }\n\n  hide = () => {\n    this.setState({ confirmVisible: false });\n  }\n\n\n  // Gets called every time the first select form has an option change.\n  eventSelectChange = (option, actions) => {\n    var val = option ? option.value : \"\";\n    if(val !== \"\") {\n      this.props.updateSelection(val, \"NONE\");\n    }\n    \n    this.setState({\n      event: val,\n      // Every event has a none options so this is the default. Stylistic change \n      attribute: \"NONE\"\n    })\n  }\n\n  // Gets called every time the second select form has an option change.\n  attributeSelectChange = (option, actions) => {\n    var val = option ? option.value : \"\";\n    if(val !== \"\") {\n      this.props.updateSelection(this.props.event, val);\n    }\n    this.setState({\n      attribute: val\n    })\n  }\n\n  // Using the event state determine what options to return.\n  // These will be displayed on the second dropdown\n  determineAttributes = () => {\n    // https://github.com/tamuhack-org/Ouroboros/blob/86da19f7354388b77d3bda958f7054426debd728/hiss/volunteer/models.py#L6\n    var foodChoices = [\n      { value: 'NONE', label: 'None'},\n      { value: 'VEGAN', label: 'Vegan'},\n      { value: 'VEGETARIAN', label: 'Vegetarian'},\n      { value: 'HALAL', label: 'Halal'},\n      { value: 'KOSHER', label: 'Kosher'},\n      { value: 'GLUTEN_FREE', label: 'Gluten-free'},\n      { value: 'FOOD_ALLERGY', label: 'Food allergy'},\n      { value: 'DIETARY_RESTRICTION_OTHER', label: 'Other'}\n    ]\n    if(this.state.event) {\n      // Options must match the eventOptions values\n      var options =  {\n        \"checked_in\": [ { value: 'NONE', label: 'N/A'}, ],\n        \"BREAKFAST\": foodChoices,\n        \"LUNCH\": foodChoices,\n        \"DINNER\": foodChoices,\n        \"MIDNIGHT_SNACK\": foodChoices,\n        \"WorkshopEvent\": [ { value: 'NONE', label: 'N/A'}, ]\n      }\n      return this.state.event in options ? options[this.state.event] : undefined\n    }\n    return undefined\n  }\n\n  render() {\n    var {\n      event,\n      attribute,\n      redirectToLogin\n    } = this.state;\n\n    if(redirectToLogin) {\n      return <Redirect to='/' />\n    }\n\n    const cameraString = this.state.frontCamera ? 'user' : 'environment';\n\n    // https://github.com/tamuhack-org/Ouroboros/blob/d1bafcdfaf6b54eaf7bf9a6720373e0bd3ec8855/hiss/volunteer/views.py\n    const eventOptions = [\n      { value: 'checked_in', label: 'Check In' },\n      { value: 'BREAKFAST', label: 'Breakfast' },\n      { value: 'LUNCH', label: 'Lunch' },\n      { value: 'DINNER', label: 'Dinner' },\n      { value: 'MIDNIGHT_SNACK', label: 'Midnight Snack' },\n      { value: 'WorkshopEvent', label: 'Workshop' }\n    ]\n\n    const attributeOptions = this.determineAttributes()\n\n    // Formats the individual options in the select tags (react-select)\n    const formatGroupLabel = data => (\n      <div style={style.groupStyles}>\n        <span>{data.label}</span>\n        <span style={style.groupBadgeStyles}>{data.options.length}</span>\n      </div>\n    );\n\n    return (\n      <div>\n        <TopNavbar leftIconSrc=\"arrowleft\" rightIconSrc=\"magnifying\" leftRedirectRoute=\"/select\" rightRedirectRoute=\"/search\"/>\n        <div style={style.pageContainer}>\n          {/* Selection Container */}\n          <div style={style.selectionContainer}>\n            <div style={style.halfContainer}>\n              <Select\n                options={eventOptions}\n                formatGroupLabel={formatGroupLabel}\n                placeholder=\"Event\"\n                isClearable={true}\n                isSearchable={ false }\n                styles={{\n                  // https://stackoverflow.com/questions/55830799/how-to-change-zindex-in-react-select-drowpdown\n                  menu: provided => ({ ...provided, zIndex: 9999 })\n                }}\n                defaultValue={event == \"\" ? undefined : eventOptions.filter( v => v['value'] == event )[0]}\n                onChange={this.eventSelectChange}\n              />\n            </div>\n            <div style={style.halfContainer}>\n              <Select\n                options={attributeOptions}\n                formatGroupLabel={formatGroupLabel}\n                placeholder=\"Attribute\"\n                isClearable={true}\n                isDisabled={event == \"\" || event == \"checked_in\" || event == \"WorkshopEvent\"}\n                value= {\n                  attribute == \"\" || attributeOptions == undefined ? \n                  undefined : attributeOptions.filter( v => v['value'] == attribute )[0]\n                }\n                styles={{\n                  // https://stackoverflow.com/questions/55830799/how-to-change-zindex-in-react-select-drowpdown\n                  menu: provided => ({ ...provided, zIndex: 9999 })\n                }}\n                onChange={this.attributeSelectChange}\n                isSearchable={ false }\n              />\n            </div>\n          </div>\n          <div>\n            <QrReader\n              style={{width: '100%', marginBottom: 20, alignItems: 'center', alignSelf: 'center', justifyContent: 'center'}}\n              delay={this.state.delay}\n              onScan={this.handleScan}\n              facingMode={cameraString}\n            />\n            <Button\n              style={style.switchCameraContainer}\n              onClick={this.switchCamera}>\n              Switch Camera\n            </Button>\n          </div>\n          <ConfirmModal \n            qrData={this.state.qrData}\n            modalVisible={this.state.confirmVisible}\n            closeModal={this.hide}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst style : { [key: string]: React.CSSProperties } = {\n  pageContainer : {\n    display: 'flex',\n    height: 'calc(100vh - 72px)',\n    width: '100vw',\n    alignItems: 'center',\n    flexDirection: 'column',\n    backgroundColor: 'white',\n    // paddingTop: '10vh'\n  },\n  selectionContainer: {\n    padding: '30px 10px',\n    marginBottom: \"10px\",\n    backgroundColor: \"#FF7C93\",\n    width: '100vw',\n  },\n  switchCameraContainer: {\n    width: '80vw',\n    height: '56px',\n    backgroundColor: '#FF7C93',\n    border: 0,\n    outline: 0\n  },\n  modalContainer: {\n    display: 'flex',\n    backgroundColor: 'white',\n    height: 350,\n    padding: 30,\n  },\n  checkInStatusRow: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    border: '5px solid #5CD059',\n    marginBottom: 50,\n    paddingTop: 5,\n    paddingBottom: 5\n  },\n  emailRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 10,\n    paddingTop: 0,\n    marginBottom: 20,\n    borderBottom: '1px #DEDEDE solid',\n  },\n\n  // Default React-Select styles\n  groupBadgeStyles: {\n    backgroundColor: '#EBECF0',\n    borderRadius: '2em',\n    color: '#172B4D',\n    display: 'inline-block',\n    fontSize: 12,\n    fontWeight: 'normal',\n    lineHeight: '1',\n    minWidth: 1,\n    width: \"200px;\",\n    padding: '0.16666666666667em 0.5em',\n    textAlign: 'center',\n  },\n\n  // Default React-Select styles\n  groupStyles: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  halfContainer: {\n    width: \"50%\",\n    padding: \"0px 5px\",\n    display: \"inline-block\"\n  }\n  \n};\n\nconst mapStateToProps = state => ({\n  event: state.selection.event,\n  attribute: state.selection.attribute,\n  userData: state.auth.userData,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateSelection: (event:string, attribute:string) => dispatch(actions.updateSelection(event, attribute))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QRScan);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { AppActions } from '../../types/actions';\nimport * as actions from '../../redux/actions/selectionActions';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Select from 'react-select'\nimport Button from 'react-bootstrap/Button';\nimport TopNavbar from './../../Components/navbar';\nimport { LoginData } from '../../types/TypeObjects';\n\n\ninterface IProps {\n  event: string;\n  attribute: string;\n  userData: LoginData,\n  updateSelection: (event: string, attribute: string) => Dispatch<AppActions>;\n}\n\ninterface IState {\n  event: string;\n  attribute: string;\n  redirectToScan: boolean;\n  redirectToLogin: boolean;\n}\n\nclass Selection extends React.PureComponent<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      event: this.props.event,\n      attribute: this.props.attribute,\n      redirectToScan: false,\n      redirectToLogin: this.props.userData === undefined\n    }\n  }\n\n\n  // Gets called every time the first select form has an option change.\n  eventSelectChange = (option, actions) => {\n    var val = option ? option.value : \"\";\n    this.setState({\n      event: val,\n      // Every event has a none options so this is the default. Stylistic change \n      attribute: \"NONE\"\n    })\n  }\n\n  // Gets called every time the second select form has an option change.\n  attributeSelectChange = (option, actions) => {\n    var val = option ? option.value : \"\";\n    this.setState({\n      attribute: val\n    })\n  }\n\n  // Using the event state determine what options to return.\n  // These will be displayed on the second dropdown\n  determineAttributes = () => {\n    // https://github.com/tamuhack-org/Ouroboros/blob/86da19f7354388b77d3bda958f7054426debd728/hiss/volunteer/models.py#L6\n    var foodChoices = [\n      { value: 'NONE', label: 'None'},\n      { value: 'VEGAN', label: 'Vegan'},\n      { value: 'VEGETARIAN', label: 'Vegetarian'},\n      { value: 'HALAL', label: 'Halal'},\n      { value: 'KOSHER', label: 'Kosher'},\n      { value: 'GLUTEN_FREE', label: 'Gluten-free'},\n      { value: 'FOOD_ALLERGY', label: 'Food allergy'},\n      { value: 'DIETARY_RESTRICTION_OTHER', label: 'Other'}\n    ]\n    if(this.state.event) {\n      // Options must match the eventOptions values\n      var options =  {\n        \"checked_in\": [ { value: 'NONE', label: 'N/A'}, ],\n        \"BREAKFAST\": foodChoices,\n        \"LUNCH\": foodChoices,\n        \"DINNER\": foodChoices,\n        \"MIDNIGHT_SNACK\": foodChoices,\n        \"WorkshopEvent\": [ { value: 'NONE', label: 'N/A'}, ]\n      }\n      return this.state.event in options ? options[this.state.event] : undefined\n    }\n    return undefined\n  }\n\n  handleScanSubmit = () => {\n    this.props.updateSelection(this.state.event, this.state.attribute);\n    this.setState({ redirectToScan: true });\n    // TODO Alert user about invalid selection\n  }\n\n  isDisabled = () => {\n    \n  }\n\n  render() {\n    var {\n      event,\n      attribute,\n      redirectToScan,\n      redirectToLogin\n    } = this.state;\n\n    if(redirectToLogin) {\n      return <Redirect to='/' />\n    }\n\n    if(redirectToScan) {\n      return <Redirect to='/scan' />\n    }\n\n    // https://github.com/tamuhack-org/Ouroboros/blob/d1bafcdfaf6b54eaf7bf9a6720373e0bd3ec8855/hiss/volunteer/views.py\n    const eventOptions = [\n      { value: 'checked_in', label: 'Check In' },\n      { value: 'BREAKFAST', label: 'Breakfast' },\n      { value: 'LUNCH', label: 'Lunch' },\n      { value: 'DINNER', label: 'Dinner' },\n      { value: 'MIDNIGHT_SNACK', label: 'Midnight Snack' },\n      { value: 'WorkshopEvent', label: 'Workshop' }\n    ]\n\n    const attributeOptions = this.determineAttributes()\n\n    // Formats the individual options in the select tags (react-select)\n    const formatGroupLabel = data => (\n      <div style={style.groupStyles}>\n        <span>{data.label}</span>\n        <span style={style.groupBadgeStyles}>{data.options.length}</span>\n      </div>\n    );\n\n    return (\n      <div>\n        <TopNavbar leftIconSrc=\"isymbol\" rightIconSrc=\"logout\" leftRedirectRoute=\"/info\" rightRedirectRoute=\"/\" />\n        <div style={style.pageContainer}>\n          <h2 style={{ fontSize: '36px', color: \"#FF7C93\", marginBottom: \"40px\" }}>\n            Select a scan...\n          </h2>\n\n          {/* React-Select component */}\n          <Select\n            options={eventOptions}\n            formatGroupLabel={formatGroupLabel}\n            placeholder=\"Event\"\n            isClearable={true}\n            isSearchable={ false }\n            // Uses the event state to determine if any objects in the eventOptions array have a value equal to event. \n            //  If so, return the first object where this is valid. (This logic is repeated 4 times) to select the defaul. \n            defaultValue={event == \"\" ? undefined : eventOptions.filter( v => v['value'] == event )[0]}\n            onChange={this.eventSelectChange}\n          />\n          <br />\n\n          {/* React-Select component */}\n          <Select\n            options={attributeOptions}\n            formatGroupLabel={formatGroupLabel}\n            placeholder=\"Attribute\"\n            isClearable={true}\n            isDisabled={event == \"\" || event == \"checked_in\" || event == \"WorkshopEvent\"}\n            value= {\n              attribute == \"\" || attributeOptions == undefined ? \n              undefined : attributeOptions.filter( v => v['value'] == attribute )[0]\n            }\n            onChange={this.attributeSelectChange}\n            isSearchable={ false }\n          />\n          <br />\n\n          <Button block\n            style={{border: \"1px solid #FF7C93\", backgroundColor: \"#FF7C93\"}}\n            onClick={this.handleScanSubmit}\n            disabled={! (event && attribute)}\n          >\n            Start Scanning\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\nconst style : { [key: string]: React.CSSProperties } = {\n\n  // Changed, no longer flex and MarginTop is hardcoded\n  pageContainer : {\n    padding: \"20px\",\n    marginTop: \"12vh\",\n    width: '100vw',\n  },\n\n  // Default React-Select styles\n  groupBadgeStyles: {\n    backgroundColor: '#EBECF0',\n    borderRadius: '2em',\n    color: '#172B4D',\n    display: 'inline-block',\n    fontSize: 12,\n    fontWeight: 'normal',\n    lineHeight: '1',\n    minWidth: 1,\n    width: \"200px;\",\n    padding: '0.16666666666667em 0.5em',\n    textAlign: 'center',\n  },\n\n  // Default React-Select styles\n  groupStyles: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  }\n};\n\nconst mapStateToProps = state => ({\n  event: state.selection.event,\n  attribute: state.selection.attribute,\n  userData: state.auth.userData\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateSelection: (event:string, attribute:string) => dispatch(actions.updateSelection(event, attribute))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selection);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport axios from 'axios';\nimport Toast from './../../Components/toast';\nimport TopNavbar from './../../Components/navbar';\nimport ConfirmModal from '../ConfirmModal/ConfirmModal';\nimport { QRData, LoginData } from '../../types/TypeObjects';\nimport { Redirect } from 'react-router-dom';\n\ninterface IProps {\n  event: string;\n  token: number\n  attribute: string;\n  userData: LoginData;\n}\n\ninterface IState {\n    event: string;\n    attribute: string;\n\n    name: string;\n    displayUsers: boolean;\n    users: Array<any>;\n\n    // Added state for the toast\n    searchFailed: boolean;\n    searchSuccess: boolean;\n    currentToastID: number;\n    toastText: string;\n\n    modalVisible: boolean;\n    participantData: QRData;\n\n    redirectToLogin: boolean;\n}\n\nclass Selection extends React.PureComponent<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n        event: \"\",\n        attribute: \"\",\n        name: \"\",\n\n        displayUsers: false,\n        users: [],\n        searchFailed: false, \n        searchSuccess: false,\n        currentToastID: 0, \n        toastText: \"\",\n\n        modalVisible: false,\n        participantData: {\n          \"email\": \"\",\n          \"first_name\": \"\",\n          \"last_name\": \"\"\n        },\n\n        redirectToLogin: this.props.userData === undefined\n    }\n  }\n\n  showModal = () => {\n    this.setState({ modalVisible: true });\n  }\n\n  closeModal = () => {\n    this.setState({ modalVisible: false });\n  }\n  \n  setParticipantData = (user) => {\n    this.setState({ participantData: user}, () => {\n      this.setState({ modalVisible: true });\n    });\n  }\n\n  nameHandler = (event) => {\n    this.setState({ name: event.target.value });\n  }\n\n  createFailureToast() {\n    // Create a new toast by toggling the state\n    this.setState({\n      searchFailed: true,\n      searchSuccess: false,\n      toastText: \"Failed to authenticate!\",\n      // Toasts need a unique ID to know when to render\n      currentToastID: this.state.currentToastID + 1\n    })\n  }\n\n  createSuccessToast(responseData) {\n    // Create a new toast by toggling the state\n    this.setState({\n      searchSuccess: true,\n      searchFailed: false,\n      users: responseData,\n      toastText: `Found ${responseData.length} user${responseData.length - 1 ? '': 's'}!`,\n      // Toasts need a unique ID to know when to render\n      currentToastID: this.state.currentToastID + 1\n    })\n  }\n\n  createWarningToast(responseData) {\n    // Create a new toast by toggling the state\n    this.setState({\n      toastText: \"No users found!\",\n      searchSuccess: true,\n      searchFailed: false,\n      users: responseData,\n      // Toasts need a unique ID to know when to render\n      currentToastID: this.state.currentToastID + 1\n    })\n  }\n\n  // TODO\n  handlePopup = (user) => {\n    console.log(user)\n  }\n\n  // Calls the api/volunteer/search endpoint\n  // NOTE: There is no hard cap or limit checking. A person can type \" \" and get every user for instance\n  handleSearchSubmit = () => {\n    var {\n      name,\n      event,\n      attribute\n    } = this.state\n\n    // Token taken from Redux State\n    // This will get reset each server restart. This means you will have to visit the login page again.\n    var token = this.props.userData.data.token;\n\n    if(name && token) {\n      return axios.get(\n        `https://register.tamuhack.com/api/volunteer/search?q=${name}`,\n        {\n          headers: {\n            'Authorization': `Token ${token}`\n          }\n        }\n      ).then(response => {\n        var responseData = response.data.results\n        \n        // OPTIONAL: Warning toast if there is 0 results found\n        responseData.length == 0 ? this.createWarningToast(responseData) : this.createSuccessToast(responseData) \n      }).catch(error => {\n        this.createFailureToast() \n      });\n    } else {\n      // Same error message as in the .catch tag\n      this.createFailureToast() \n    }\n  }\n\n  render() {\n    var {\n        name,\n        users,\n        redirectToLogin\n    } = this.state;\n\n    if(redirectToLogin) {\n      return <Redirect to='/' />\n    }\n\n    // Create the failure, success, and warning toast\n    let failureToast = (this.state.searchFailed) ? (\n        <Toast type=\"error\" text={this.state.toastText} id={this.state.currentToastID}/>\n    ) : undefined;\n  \n    let successToast = (this.state.searchSuccess && users.length != 0) ? (\n        <Toast type=\"success\" text={this.state.toastText} id={this.state.currentToastID}/>\n    ) : undefined;\n  \n    let warningToast = (this.state.searchSuccess && users.length == 0) ? (\n        <Toast type=\"warning\" text={this.state.toastText} id={this.state.currentToastID}/>\n    ) : undefined;\n\n    return (\n      <div>\n        <TopNavbar leftIconSrc=\"arrowleft\" leftRedirectRoute=\"/scan\"/>\n        <div style={style.pageContainer}>\n          <InputGroup className=\"mb-3\">\n              <FormControl\n                  style={{fontSize: \"18px\"}}\n                  placeholder=\"Search User\"\n                  onChange={this.nameHandler}\n              />\n          </InputGroup>\n\n          <Button block\n            style={{border: \"1px solid #FF7C93\", backgroundColor: \"#FF7C93\"}}\n            onClick={this.handleSearchSubmit}\n            disabled={! (name)}\n            size=\"lg\"\n          > Search </Button>\n          <div style={{marginTop: \"10px\"}}>\n              {\n                // For each user \n                users.map((user, index) => {\n                    // Return this HTML \n                    return (\n                        <div onClick={() => this.setParticipantData(user)} style={{borderTop: \"1px solid black\", padding: \"5px 0px 5px 0px\"}} key={index}>\n                            <h5 style={{margin: \"0px\"}}>\n                                {user.first_name} {user.last_name}\n                                {/* TODO Launch Popup */}\n                                <span style={{float: 'right', marginTop: \"4px\"}}>\n                                  <svg style={{width: \"40\", height: \"40\"}} viewBox=\"0 0 24 24\"><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n                                </span>\n                            </h5>\n                            <p style={{margin: \"0px\"}}>\n                                {user.email}\n                            </p>\n                        </div>\n                    )\n                })\n              }\n          </div>\n          <ConfirmModal\n            qrData={this.state.participantData}\n            modalVisible={this.state.modalVisible}\n            closeModal={this.closeModal}\n          />\n          {/* Render Toast (This can go anywhere inside the render. It doesn't have to be at bottom) */}\n          {failureToast}\n          {successToast}\n          {warningToast}\n        </div>\n      </div>\n    );\n  }\n}\nconst style : { [key: string]: React.CSSProperties } = {\n  pageContainer : {\n    padding: \"20px\",\n    marginTop: \"20px\",\n    width: '100vw',\n  }\n};\n\nconst mapStateToProps = state => ({\n  userData: state.auth.userData\n  /*event: state.selection.eventName,\n  attribute: state.selection.attribute,*/\n});\n\nconst mapDispatchToProps = dispatch => ({\n  /*login: (email:string, password:string) => dispatch(actions.login(email, password))*/\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selection);","import React from 'react';\nimport { HashRouter, Switch, Route, Router } from 'react-router-dom';\nimport Login from './Login/Login';\nimport QRScan from './QRScan/QRScan';\nimport Selection from './Selection/Selection';\nimport Search from './Search/Search';\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <HashRouter basename='/'>\n        <Switch>\n          <Route path={'/scan'} component={QRScan} />\n          <Route path={'/select'} component={Selection} />\n          <Route path={'/search'} component={Search} />\n          <Route path={'/'} component={Login} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { AuthActionTypes } from '../../types/actions';\n\nconst INITIAL_STATE: object = {\n  isLoggedIn: false,\n  isLoading: false,\n  userData: undefined,\n  error: undefined\n};\n\nexport default function auth(state = INITIAL_STATE, action: AuthActionTypes): object {\n  switch (action.type) {\n    case 'LOGIN_ATTEMPT':\n      return {\n        ...state,\n        isLoading: true,\n        isLoggedIn: false\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isLoggedIn: true,\n        userData: action.userData,\n        error: undefined\n      };\n    case 'LOGIN_FAILED':\n      return {\n        ...state,\n        isLoading: false,\n        isLoggedIn: false,\n        error: action.error\n      };\n    case 'LOGOUT':\n      return {\n        userData: undefined,\n        isLoading: false,\n        isLoggedIn: false,\n        error: undefined\n      };\n    default:\n      return state;\n  }\n}\n","import { SelectionActionTypes } from '../../types/actions';\n\nconst INITIAL_STATE: object = {\n  event: \"\",\n  attribute: \"\"\n};\n\nexport default function selection(state = INITIAL_STATE, action: SelectionActionTypes): object {\n  switch (action.type) {\n    case 'SELECTION_SUCCESS':\n      return {\n        event: action.event,\n        attribute: action.attribute\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport auth from './authReducer';\nimport selection from './selectionReducer';\n\nconst rootReducer = combineReducers({\n  auth,\n  selection\n});\n\nexport type AppState = ReturnType<typeof rootReducer>\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/index';\n\nconst persistConfig = {\n    key: 'root',\n    storage\n}\n\nconst reducers = persistReducer(persistConfig, rootReducer);\nconst middlewares = [thunk];\n\nconst store = createStore(\n    reducers,\n    undefined,\n    compose(applyMiddleware(...middlewares))\n)\nconst persistor = persistStore(store);\n\nexport { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Pages/Routes';\nimport Login from './Pages/Login/Login';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ReduxApp = () => {\n  return (\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <Routes />\n        </PersistGate>\n    </Provider>\n  )\n}\n\nReactDOM.render(<ReduxApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/hiss_full_logo.396f0bda.svg\";","var map = {\n\t\"./arrowleft.svg\": 103,\n\t\"./arrowright.svg\": 104,\n\t\"./hiss.svg\": 59,\n\t\"./hiss_full_logo.svg\": 56,\n\t\"./isymbol.svg\": 105,\n\t\"./logout.svg\": 106,\n\t\"./magnifying.svg\": 107\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 58;","module.exports = __webpack_public_path__ + \"static/media/hiss.768b0a92.svg\";"],"sourceRoot":""}